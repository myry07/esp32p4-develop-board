[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x2000 /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/bootloader/bootloader.bin
Bootloader binary size 0x5700 bytes. 0x900 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/003_button.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable 003_button.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32p4 image...
Merged 2 ELF sections
Successfully created esp32p4 image.
Generated /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/003_button.bin
[9/10] cd /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build/003_button.bin
003_button.bin binary size 0x34120 bytes. Smallest app partition is 0x100000 bytes. 0xcbee0 bytes (80%) free.
[9/10] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32p4" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/esp32p4-develop-board/003_button/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32p4 -p /dev/cu.usbmodem101 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x2000 bootloader/bootloader.bin 0x10000 003_button.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbmodem101
Connecting...
Chip is ESP32-P4 (revision v1.0)
Features: High-Performance MCU
Crystal is 40MHz
MAC: 30:ed:a0:e0:e5:20
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00002000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00044fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 22272 bytes to 13704...
Writing at 0x00002000... (100 %)
Wrote 22272 bytes (13704 compressed) at 0x00002000 in 0.4 seconds (effective 452.3 kbit/s)...
Hash of data verified.
Compressed 213280 bytes to 109524...
Writing at 0x00010000... (14 %)
Writing at 0x0001ab7c... (28 %)
Writing at 0x000217bd... (42 %)
Writing at 0x00028912... (57 %)
Writing at 0x000302fd... (71 %)
Writing at 0x00036df6... (85 %)
Writing at 0x0003e2c3... (100 %)
Wrote 213280 bytes (109524 compressed) at 0x00010000 in 1.7 seconds (effective 1012.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 332.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
